algo = input('Digite algo:')
tipo = type(algo)

print('O tipo primitivo desta mensagem é: {}'.format(tipo))
print(algo.isalpha())
print(algo.isalnum())
print(algo.isascii())
print(algo.isdigit())
print(algo.islower())
print(algo.isdecimal())
print(algo.isidentifier())
print(algo.isnumeric())
print(algo.isprintable())
print(algo.isupper())
print(algo.isspace())
print(algo.istitle())
tip2 = (algo.isalpha())
tip3 = (algo.isalnum())
tip4 = (algo.isascii())
tip5 = (algo.isdigit())
tip6 = (algo.islower())
tip7 = (algo.isdecimal())
tip8 = (algo.isidentifier())
tip9 = (algo.isnumeric())
tip10 = (algo.isprintable())
tip11 = (algo.isupper())
tip12 = (algo.isspace())
tip13 = (algo.istitle())
print('Informação 1: {}'.format(tip2))
print('Informação 2: {}'.format(tip3))
print('Informação 3: {}'.format(tip4))
print('Informação 4: {}'.format(tip5))
print('Informação 5: {}'.format(tip6))
print('Informação 6: {}'.format(tip7))
print('Informação 7: {}'.format(tip9))
print('Informação 8: {}'.format(tip10))
print('Informação 9: {}'.format(tip11))
print('Informação 10: {}'.format(tip12))
print('Informação 11: {}'.format(tip13))
print(f'Todas as informações da mensagem ao lado: {tip2},{tip3},{tip4},{tip5},{tip6},{tip7},{tip8},{tip9},{tip10},{tip11},{tip12},{tip13}')
#Usando o "type" não deu certo, pois informada o typo da mensagem que era bool, que ficava se repetindo por toda mensagem.
#Utilizando o novo sistema do .format, que seria o f antes do '', consegui organizar com menos linhas o código.
